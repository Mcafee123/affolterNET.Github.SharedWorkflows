name: Build

on:
  workflow_call:
    inputs:

      # Frontend
      build-frontend:
        description: 'Build the frontend project'
        required: false
        type: boolean
        default: false
      frontend-root:
        description: 'Root directory of the frontend project'
        required: false
        type: string
        default: ''
      frontend-build-command:
        description: 'Command to build the frontend'
        required: false
        default: 'npm run build'
        type: string
      node-version:
        description: 'Node.js version to use for frontend build'
        required: false
        default: '20.x'
        type: string

      # Backend
      backend-root:
        description: 'Root directory of the backend project'
        required: true
        type: string
      backend-folder:
        description: 'Folder containing the backend project'
        required: true
        type: string
      backend-project-file:
        description: 'Backend project file (e.g., .csproj, package.json)'
        required: true
        type: string

      # Docker
      image-name:
        description: 'Name of the Docker image to build'
        required: true
        type: string
      registry-name:
        description: 'Azure Container Registry login server (e.g., myregistry.azurecr.io)'
        required: true
        type: string
      dockerfile:
        description: 'Path to the Dockerfile relative to the backend root'
        required: false
        default: 'Dockerfile'
        type: string
      push:
        description: 'Whether to push the Docker image to the registry'
        required: false
        type: boolean
        default: false

      # Versioning
      update-version:
        description: 'Update the version in the project file'
        required: false
        type: boolean
        default: false
      version-script:
        description: 'Path to version script downloaded from shared repository'
        required: false
        default: './scripts/ci_version.sh'
        type: string
      scripts-version:
        description: 'Version/tag of scripts to use from shared repository'
        required: false
        default: 'main'
        type: string
      
      # Terraform
      tf-module-path:
        description: 'Path to the Terraform module'
        required: false
        type: string
        default: ''
      tfvars-file:
        description: 'Path to the Terraform tfvars file to update'
        required: false
        type: string
        default: 'terraform.tfvars'

    secrets:

      # ACR
      acr-username:
        description: 'Azure Container Registry username'
        required: false
      acr-password:
        description: 'Azure Container Registry password'
        required: false


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: Mcafee123/affolterNET.Github.SharedWorkflows/actions/checkout@main
        with:
          fetch-depth: 0

      - name: Get version scripts
        uses: Mcafee123/affolterNET.Github.SharedWorkflows/actions/get-scripts@main
        with:
          scripts-version: ${{ inputs.scripts-version }}
          github-token: ${{ github.token }}

      - name: Get version from project file
        id: version
        shell: bash
        run: |
          if [ ${{ inputs.update-version }} == true ]; then
            echo "Updating version in project file..."
            echo "Running: ./${{ inputs.version-script }} update ${{ inputs.backend-root }}/${{ inputs.backend-folder }}/${{ inputs.backend-project-file}} ${{ inputs.tf-module-path }}/${{ inputs.tfvars-file }}"
            ./${{ inputs.version-script }} update ${{ inputs.backend-root }}/${{ inputs.backend-folder }}/${{ inputs.backend-project-file}} ${{ inputs.tf-module-path }}/${{ inputs.tfvars-file }} >> $GITHUB_OUTPUT
          else
            echo "Reading version from project file..."
            echo "Running: ./${{ inputs.version-script }} read ${{ inputs.backend-root }}/${{ inputs.backend-folder }}/${{ inputs.backend-project-file}}"
            ./${{ inputs.version-script }} read ${{ inputs.backend-root }}/${{ inputs.backend-folder }}/${{ inputs.backend-project-file}} >> $GITHUB_OUTPUT
          fi

      - name: Build Frontend
        if: ${{ inputs.build-frontend == true }}
        uses: Mcafee123/affolterNET.Github.SharedWorkflows/actions/build-frontend@main
        with:
          frontend-root: ${{ inputs.frontend-root }}
          build-command: ${{ inputs.frontend-build-command }}
          node-version: ${{ inputs.node-version }}

      - name: Build Backend
        uses: Mcafee123/affolterNET.Github.SharedWorkflows/actions/build-backend@main
        with:
          version: ${{ steps.version.outputs.version }}
          project-root: ${{ inputs.backend-root }}
          project-folder: ${{ inputs.backend-folder }}
          project-file: ${{ inputs.backend-project-file }}
          dockerfile: ${{ inputs.dockerfile}}
          image-name: ${{ inputs.image-name }}
          registry-name: ${{ inputs.registry-name }}
          push: ${{ inputs.push }}
          version-script: ${{ inputs.version-script }}
          scripts-version: ${{ inputs.scripts-version }}
          acr-username: ${{ secrets.acr-username }}
          acr-password: ${{ secrets.acr-password }}
