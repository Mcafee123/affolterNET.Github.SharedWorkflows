name: 'Get Version- and Tag-Scripts'
description: 'Downloads and sets up common build scripts from shared repository'
inputs:
  scripts-version:
    description: 'Version/tag of scripts to use'
    required: false
    default: 'main'
  github-token:
    description: 'GitHub token for accessing private repositories'
    required: false
    default: ${{ github.token }}

runs:
  using: 'composite'
  steps:
    - name: Download scripts from shared repository
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        REPO_OWNER: McAfee123
        REPO_NAME: affolterNET.Github.SharedWorkflows
        SCRIPTS_VERSION: ${{ inputs.scripts-version }}
      run: |
        echo "üì• Downloading scripts from shared repository..."
        
        # Create scripts directory if it doesn't exist
        mkdir -p scripts
        
        # List of scripts to download
        SCRIPTS=(
          "ci_version.sh"
          "ci_tag.sh"
        )
        
        for script in "${SCRIPTS[@]}"; do
          # Clean up existing version if it exists
          if [ -f "scripts/$script" ]; then
            echo "üßπ Removing existing scripts/$script..."
            rm "scripts/$script"
          fi
          
          echo "Downloading $script..."
          curl -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3.raw" \
               -L "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/contents/scripts/$script?ref=$SCRIPTS_VERSION" \
               -o "scripts/$script"
          
          # Make script executable
          chmod +x "scripts/$script"
          echo "‚úÖ Downloaded and set executable: scripts/$script"
        done
        
        echo "‚úÖ All scripts downloaded successfully"

    - name: Verify scripts
      shell: bash
      run: |
        echo "üîç Verifying downloaded scripts..."
        ls -la scripts/
        
        # Basic validation
        for script in scripts/*.sh; do
          if [ -f "$script" ] && [ -x "$script" ]; then
            echo "‚úÖ $script - OK (executable)"
          else
            echo "‚ùå $script - FAILED (not found or not executable)"
            exit 1
          fi
        done